<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../partials/head'); %>
</head>

<body class="container">

  <header>
    <%- include('../partials/header'); %>
  </header>
  <main>
    <!-- The post you are viewing -->
    <section style="background-color: #eee;">
      <div class="container">
        <div class="row d-flex justify-content-center">
          <div class="col-md-12 col-lg-10 col-xl-8">
            <div class="card" style="border-radius: 0;">
              <div class="card-body">
                <div class="d-flex flex-start align-items-center">
                  <img class="rounded-circle shadow-1-strong me-3"
                    src="https://mdbcdn.b-cdn.net/img/Photos/Avatars/img%20(19).webp" alt="avatar" width="60"
                    height="60" />
                  <div>
                    <a href="/profile/<%= poster_id %>" class="h6 fw-bold text-primary mb-1"
                      style="text-decoration:none">
                      <%= poster.username %>
                    </a>
                    <p class="text-muted small mb-0">
                      <%= row.post_timestamp.toString().substring(0, 24) %>
                    </p>
                    <p class="text-muted small mb-0" id="post-likes-count">
                      <%= row.upvotes_received %> Likes
                    </p>
                  </div>
                </div>
                <p class="h3 mt-3">
                  <%= row.post_title %>
                </p>
                <p class="mt-3">
                  <%= row.post_content %>
                </p>

                <div id="post-tags" class="mt-2 mb-2 p-1">
                  <% tags.forEach(function(tag) { %>
                  <span class="badge rounded-pill bg-primary"><%= tag.tag_name %></span>
                  <% }); %>
                </div>

                <div class="small d-flex justify-content-start">
                  <a onclick="likePost('<%= row.post_id %>', '<%= user_id %>')"
                    class="d-flex align-items-center me-3 post-action">
                    <i class="far fa-thumbs-up me-2"></i>
                    <p class="mb-0 unliked" id="like-button">Like!</p>
                  </a>
                  <a class="d-flex align-items-center me-3 post-action" onclick="toggleCommentBox()">
                    <i class="far fa-thumbs-up me-2"></i>
                    <p class="mb-0">Comment</p>
                  </a>
                  <a class="d-flex align-items-center me-3 post-action">
                    <i class="fas fa-share me-2"></i>
                    <p class="mb-0">Share</p>
                  </a>
                </div>
              </div>
              <!-- Comment Box -->
              <div class="card-footer py-3 border-0" style="background-color: #f8f9fa;" id="comment-box">
                <form action="/comment/<%= row.post_id %>" method="post">
                  <div class="d-flex flex-start w-100">
                    <div class="form-outline w-100">
                      <textarea class="form-control" id="textAreaExample" name="commentContent" rows="4"
                      minlength="150" style="background: #fff;"></textarea>
                      <label class="form-label" for="commentContent"></label>
                    </div>
                  </div>
                  <div class="float-end mt-2 pt-1">
                    <button type="submit" class="btn btn-primary btn-sm">Post comment</button>
                    <button type="button" class="btn btn-outline-primary btn-sm" onclick="toggleCommentBox()">Cancel</button>
                  </div>
                </form>
              </div>
              <!-- Comment Section  -->
              <div class="container">
                <p class="h3 mt-3">
                  Comments
                </p>
                <% comments.forEach(function(row) { %>
                <div class="card mb-4">
                  <div class="card-body">
                    <p><%= row.comment_content %></p>

                    <div class="d-flex justify-content-between">
                      <div class="d-flex flex-row align-items-center">
                        <img src="https://mdbcdn.b-cdn.net/img/Photos/Avatars/img%20(4).webp" alt="avatar" width="25"
                          height="25" />
                        <a href="/profile/<%= poster_id %>" class="small mb-0 ms-2" style="text-decoration:none"><%= row.commenter_username %></a>
                      </div>
                      <div class="d-flex flex-row align-items-center">
                        <a onclick="likeComment('<%= row.comment_id %>', '<%= user_id %>')"
                          class="d-flex align-items-center me-3 post-action">
                          <i class="far fa-thumbs-up me-2"></i>
                          <p class="mb-0 unliked" id="comment-like-button-<%= row.comment_id %>">Like!</p>
                        </a>
                        <i class="far fa-thumbs-up mx-2 fa-xs text-black" style="margin-top: -0.16rem;"></i>
                        <p class="small text-muted mb-0"><span
                            id="comment-likes-count-<%= row.comment_id %>"><%= row.upvotes_received %></span> Likes</p>
                      </div>
                    </div>
                  </div>
                </div>
                <% }); %>
              </div>
            </div>
          </div>
        </div>
      </div>

    </section>

  </main>


  <footer>
    <%- include('../partials/footer'); %>
  </footer>

  <script>
    let postUpvotes = parseInt('<%= row.upvotes_received %>');
    // Sends a POST request to the backend using 
    async function likePost(postId, likerId) {
      let data = {
        post_id: postId,
        liker_id: likerId,
      }
      fetch('/likepost', {
          method: 'POST',
          body: JSON.stringify(data),
          headers: {
            'Content-type': 'application/json'
          }
        })
        .then(response => response.json().then((data) => {
          console.log(data)
          if (data.error) {
            console.log("Server Error: " + error)
            return
          }
          if (data.liked) { // If the post was liked, then update the DOM to give like feedback
            setButtonLiked('like-button', true)
            setLikes('post-likes-count', postUpvotes += 1)
          } else { // If the post was unliked, then update the DOM to give unlike feedback
            setButtonLiked('like-button', false)
            setLikes('post-likes-count', postUpvotes -= 1)
          }
        }));
    }

    async function likeComment(commentId, likerId) {
      let data = {
        comment_id: commentId,
        liker_id: likerId,
      }
      fetch('/likecomment', {
          method: 'POST',
          body: JSON.stringify(data),
          headers: {
            'Content-type': 'application/json'
          }
        })
        .then(response => response.json().then((data) => {
          console.log(data)
          if (data.error) {
            console.log("Server Error: " + error)
            return
          }
          if (data.liked) { // If the post was liked, then update the DOM to give like feedback
            setButtonLiked('comment-like-button-' + commentId, true)
            let likesElement = document.getElementById('comment-likes-count-' + commentId)
            likesElement.innerHTML = parseInt(likesElement.innerHTML) + 1
          } else { // If the post was unliked, then update the DOM to give unlike feedback
            setButtonLiked('comment-like-button-' + commentId, false)
            let likesElement = document.getElementById('comment-likes-count-' + commentId)
            likesElement.innerHTML = parseInt(likesElement.innerHTML) - 1
          }
        }));
    }

    function toggleCommentBox() {
      var x = document.getElementById("comment-box");
      if (x.style.display === "none") {
        x.style.display = "inline";
      } else {
        x.style.display = "none";
      }
    }

    function setButtonLiked(buttonId, isLiked) {
      if (isLiked) {
        var likeButton = document.getElementById(buttonId);
        likeButton.classList.add("liked")
        likeButton.classList.remove("unliked")
        likeButton.innerHTML = "Unlike!"
      } else {
        var likeButton = document.getElementById(buttonId);
        likeButton.classList.add("unliked")
        likeButton.classList.remove("liked")
        likeButton.innerHTML = "Like!"
      }
    }

    function setLikes(elementName, newValue) {
      document.getElementById(elementName).innerHTML = `${newValue} Likes`
    }

    // If the user liked the post, set it to Liked
    '<% if (is_liked) { %>'
    setButtonLiked('like-button', true)
    '<% } else { %>'
    setButtonLiked('like-button', false)
    '<% } %>'

    // For each of the user's liked comments in this post, set them to Liked
    '<% liked_comments.forEach(function(row) { %>'
    setButtonLiked('comment-like-button-' + '<%= row.comment_id %>', true)
    '<% }) %>'
  </script>
</body>

</html>